{
    "sourceFile": "controllers/like.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 50,
            "patches": [
                {
                    "date": 1680618632085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1680618647571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,48 @@\n-exports.likeSauces = (req, res, next) => {\n-    const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n-    let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n-    Sauces.findOne({ _id: req.params.id })\n-      .then((votedSauce) => {\n-        if (likeStatus === 1) {\n-          // si un utilisateur like\n-          Sauces.updateOne(\n-            { _id: req.params.id },\n-            { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n-          )\n-            .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n-            .catch((error) => res.status(400).json({ error }));\n-        } else if (likeStatus === -1) {\n-          // si un utilisateur dislike\n-          Sauces.updateOne(\n-            { _id: req.params.id },\n-            { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n-          )\n-            .then(() =>\n-              res.status(201).json({ message: \"you dislike this sauce\" })\n-            )\n-            .catch((error) => res.status(400).json({ error }));\n-        } else if (likeStatus === 0) {\n-          // si un utilisateur annule un like ou dislike\n-          if (votedSauce.usersLiked.includes(liker)) {\n-            // si l'utilisateur a deja like une sauce\n-            Sauces.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n-              .then(() =>\n-                res.status(201).json({ message: \"you un-likethis sauce\" })\n-              )\n-              .catch((error) => res.status(400).json({ error }));\n-          } else if (votedSauce.usersDisliked.includes(liker)) {\n-            // si l'utilisateur a deja unlike une sauce\n+// exports.likeSauces = (req, res, next) => {\n+//     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n+//     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n+//     Sauces.findOne({ _id: req.params.id })\n+//       .then((votedSauce) => {\n+//         if (likeStatus === 1) {\n+//           // si un utilisateur like\n+//           Sauces.updateOne(\n+//             { _id: req.params.id },\n+//             { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n+//           )\n+//             .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n+//             .catch((error) => res.status(400).json({ error }));\n+//         } else if (likeStatus === -1) {\n\\ No newline at end of file\n+//           // si un utilisateur dislike\n+//           Sauces.updateOne(\n+//             { _id: req.params.id },\n+//             { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n+//           )\n+//             .then(() =>\n+//               res.status(201).json({ message: \"you dislike this sauce\" })\n+//             )\n+//             .catch((error) => res.status(400).json({ error }));\n+//         } else if (likeStatus === 0) {\n+//           // si un utilisateur annule un like ou dislike\n+//           if (votedSauce.usersLiked.includes(liker)) {\n+//             // si l'utilisateur a deja like une sauce\n+//             Sauces.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n+//               .then(() =>\n+//                 res.status(201).json({ message: \"you un-likethis sauce\" })\n+//               )\n+//               .catch((error) => res.status(400).json({ error }));\n+//           } else if (votedSauce.usersDisliked.includes(liker)) {\n+//             // si l'utilisateur a deja unlike une sauce\n   \n-            Sauces.updateOne(\n-              { _id: req.params.id },\n-              { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n-            )\n-              .then(() =>\n-                res.status(201).json({ message: \"you un-dislike this sauce\" })\n-              )\n-              .catch((error) => res.status(400).json({ error }));\n-          }\n-        }\n-      })\n-      .catch((error) => res.status(400).json({ error }));\n-  };\n+//             Sauces.updateOne(\n+//               { _id: req.params.id },\n+//               { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n+//             )\n+//               .then(() =>\n+//                 res.status(201).json({ message: \"you un-dislike this sauce\" })\n+//               )\n+//               .catch((error) => res.status(400).json({ error }));\n+//           }\n+//         }\n+//       })\n+//       .catch((error) => res.status(400).json({ error }));\n+//   };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1680618668639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,7 @@\n+\n+\n+\n // exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680618673837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,99 @@\n+// gère les Likes et Dislikes des sauces\n+exports.likeAndDislike = (req, res, next) => {\n+\tconst { like, userId } = req.body\n+\tif (![1, 0, -1].includes(like)) {\n+\t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n+\t}\n+\tlet likeString = like.toString();\n+\tswitch (likeString) {\n+\t\tcase '1': {\n+\t\t\t// met un Like\n+\t\t\tSauce.updateOne(\n+\t\t\t\t{\n+\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+\t\t\t\t\t_id: req.params.id, \n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Like\"\n+\t\t\t\t\t$inc: { likes: req.body.like++ }, \n+\t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n+\t\t\t\t\t$push: { usersLiked: req.body.userId }, \n+\t\t\t\t}\n+\t\t\t)\n+\t\t\t\t.then((sauce) => res.status(200).json({ message: 'Like ajouté !' }))\n+\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+\t\t\tbreak;\n+\t\t}\n \n+\t\tcase '-1': {\n+\t\t\t// met un Dislike\n+\t\t\tSauce.updateOne(\n+\t\t\t\t{\n+\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+\t\t\t\t\t_id: req.params.id,\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Dislike\"\n+\t\t\t\t\t$inc: { dislikes: req.body.like++ * -1 },\n+\t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n+\t\t\t\t\t$push: { usersDisliked: req.body.userId },\n+\t\t\t\t}\n+\t\t\t)\n+\t\t\t\t.then((sauce) => res.status(200).json({ message: 'Dislike ajouté !' }))\n+\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+\t\t\tbreak;\n+\t\t}\n \n+\t\tdefault: {\n+\t\t\t// supprime un Like ou un Dislike\n+\t\t\tSauce.findOne({ _id: req.params.id })\n+\t\t\t\t.then((sauce) => {\n+\t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont liké la sauce\n+\t\t\t\t\tif (sauce.usersLiked.includes(req.body.userId)) {\n+\t\t\t\t\t\tSauce.updateOne(\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+\t\t\t\t\t\t\t\t_id: req.params.id,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n+\t\t\t\t\t\t\t\t$pull: { usersLiked: req.body.userId },\n+\t\t\t\t\t\t\t\t// supprime le Like\n+\t\t\t\t\t\t\t\t$inc: { likes: -1 },\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t\t.then((sauce) => {\n+\t\t\t\t\t\t\t\tres.status(200).json({ message: 'Like supprimé !' });\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+\t\t\t\t\t}\n+\t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont Disliké la sauce\n+\t\t\t\t\telse if (sauce.usersDisliked.includes(req.body.userId)) {\n+\t\t\t\t\t\tSauce.updateOne(\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+\t\t\t\t\t\t\t\t_id: req.params.id,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n+\t\t\t\t\t\t\t\t$pull: { usersDisliked: req.body.userId },\n+\t\t\t\t\t\t\t\t// supprime le Dislike\n+\t\t\t\t\t\t\t\t$inc: { dislikes: -1 },\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t\t.then((sauce) => {\n+\t\t\t\t\t\t\t\tres.status(200).json({ message: 'Dislike supprimé !' });\n+\t\t\t\t\t\t\t})\n+\t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+\t\t}\n+\t}\n+};\n \n+\n // exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680618705050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // gère les Likes et Dislikes des sauces\n-exports.likeAndDislike = (req, res, next) => {\n+exports.like = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n \t}\n"
                },
                {
                    "date": 1680618719956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n // gère les Likes et Dislikes des sauces\n-exports.like = (req, res, next) => {\n+exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n \t}\n \tlet likeString = like.toString();\n \tswitch (likeString) {\n \t\tcase '1': {\n \t\t\t// met un Like\n-\t\t\tSauce.updateOne(\n+\t\t\tSauces.updateOne(\n \t\t\t\t{\n \t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t_id: req.params.id, \n \t\t\t\t},\n"
                },
                {
                    "date": 1680618730799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \tlet likeString = like.toString();\n \tswitch (likeString) {\n \t\tcase '1': {\n \t\t\t// met un Like\n-\t\t\tSauces.updateOne(\n+\t\t\tSauce.updateOne(\n \t\t\t\t{\n \t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t_id: req.params.id, \n \t\t\t\t},\n"
                },
                {
                    "date": 1680618769970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-// gère les Likes et Dislikes des sauces\n+const Sauces = require('../models/Sauces');\n+const fs = require('fs');\n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n"
                },
                {
                    "date": 1680618776490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n+\n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n"
                },
                {
                    "date": 1680618795412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \tlet likeString = like.toString();\n \tswitch (likeString) {\n \t\tcase '1': {\n \t\t\t// met un Like\n-\t\t\tSauce.updateOne(\n+\t\t\tSauces.updateOne(\n \t\t\t\t{\n \t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t_id: req.params.id, \n \t\t\t\t},\n"
                },
                {
                    "date": 1680618806962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \t\t}\n \n \t\tcase '-1': {\n \t\t\t// met un Dislike\n-\t\t\tSauce.updateOne(\n+\t\t\tSauces.updateOne(\n \t\t\t\t{\n \t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t_id: req.params.id,\n \t\t\t\t},\n@@ -47,9 +47,9 @@\n \t\t}\n \n \t\tdefault: {\n \t\t\t// supprime un Like ou un Dislike\n-\t\t\tSauce.findOne({ _id: req.params.id })\n+\t\t\tSauces.findOne({ _id: req.params.id })\n \t\t\t\t.then((sauce) => {\n \t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont liké la sauce\n \t\t\t\t\tif (sauce.usersLiked.includes(req.body.userId)) {\n \t\t\t\t\t\tSauce.updateOne(\n"
                },
                {
                    "date": 1680618817165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \t\t\tSauces.findOne({ _id: req.params.id })\n \t\t\t\t.then((sauce) => {\n \t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont liké la sauce\n \t\t\t\t\tif (sauce.usersLiked.includes(req.body.userId)) {\n-\t\t\t\t\t\tSauce.updateOne(\n+\t\t\t\t\t\tSauces.updateOne(\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t\t\t\t_id: req.params.id,\n \t\t\t\t\t\t\t},\n"
                },
                {
                    "date": 1680618824337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n \t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n \t\t\t\t\t}\n \t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont Disliké la sauce\n \t\t\t\t\telse if (sauce.usersDisliked.includes(req.body.userId)) {\n-\t\t\t\t\t\tSauce.updateOne(\n+\t\t\t\t\t\tSauces.updateOne(\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n \t\t\t\t\t\t\t\t_id: req.params.id,\n \t\t\t\t\t\t\t},\n"
                },
                {
                    "date": 1680680023871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n \t}\n+    \n \tlet likeString = like.toString();\n \tswitch (likeString) {\n \t\tcase '1': {\n \t\t\t// met un Like\n"
                },
                {
                    "date": 1680680033044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n+\n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n \t}\n-    \n+\n \tlet likeString = like.toString();\n \tswitch (likeString) {\n \t\tcase '1': {\n \t\t\t// met un Like\n"
                },
                {
                    "date": 1680680040377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n+console.log\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680106886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log\n+console.log(req)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680112107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(req)\n+console.log(req.body)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680145526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(req.body)\n+console.log(req.)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680151747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(req.)\n+console.log(req.params)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680162581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(req.params)\n+console.log('req.params)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680212115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log('req.params)\n+console.log()\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680218063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log()\n+console.log(\"\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680223924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"\")\n+console.log(\"-->\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680230239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"-->\")\n+console.log(\"--> \")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680240128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"--> \")\n+console.log(\"--> CONTENU\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680245777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"--> CONTENU\")\n+console.log(\"--> CONTENU req.body\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680260757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"--> CONTENU req.body\")\n+console.log(\"--> CONTENU req.body.userId -\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680267547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"--> CONTENU req.body.userId -\")\n+console.log(\"--> CONTENU req.body.userId -ctrl\")\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680285426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n-console.log(\"--> CONTENU req.body.userId -ctrl\")\n+console.log(\"--> CONTENU req.body.userId -ctrl like\")\n \n+\n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n"
                },
                {
                    "date": 1680680293254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n+console.log()\n \n-\n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n"
                },
                {
                    "date": 1680680300910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n-console.log()\n+console.log(req.body.userId)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680376395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n-\n+const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n+//     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n console.log(req.body.userId)\n \n exports.likeSauces = (req, res, next) => {\n"
                },
                {
                    "date": 1680680411043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n-//     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n+ let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n-console.log(req.body.userId)\n+console.log(liker)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n \tif (![1, 0, -1].includes(like)) {\n"
                },
                {
                    "date": 1680680493790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n-const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n+const liker = req.body.userId // recuperation de l'utilisateur ayant like/dislike\n  let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n console.log(liker)\n \n"
                },
                {
                    "date": 1680680504064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n-const liker = req.body.userId // recuperation de l'utilisateur ayant like/dislike\n+//const liker = req.body.userId // recuperation de l'utilisateur ayant like/dislike\n  let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n console.log(\"--> CONTENU req.body.userId -ctrl like\")\n console.log(liker)\n \n"
                },
                {
                    "date": 1680680511598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n //const liker = req.body.userId // recuperation de l'utilisateur ayant like/dislike\n- let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n-console.log(\"--> CONTENU req.body.userId -ctrl like\")\n+ //let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n+//console.log(\"--> CONTENU req.body.userId -ctrl like\")\n console.log(liker)\n \n exports.likeSauces = (req, res, next) => {\n \tconst { like, userId } = req.body\n"
                },
                {
                    "date": 1680682212143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,103 +2,103 @@\n const fs = require('fs');\n //const liker = req.body.userId // recuperation de l'utilisateur ayant like/dislike\n  //let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //console.log(\"--> CONTENU req.body.userId -ctrl like\")\n-console.log(liker)\n+//console.log(liker)\n \n-exports.likeSauces = (req, res, next) => {\n-\tconst { like, userId } = req.body\n-\tif (![1, 0, -1].includes(like)) {\n-\t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n-\t}\n+// exports.likeSauces = (req, res, next) => {\n+// \tconst { like, userId } = req.body\n+// \tif (![1, 0, -1].includes(like)) {\n+// \t\treturn res.status(403).send({ message: \"Like/Dislike: Quantité invalide !\" })\n+// \t}\n \n-\tlet likeString = like.toString();\n-\tswitch (likeString) {\n-\t\tcase '1': {\n-\t\t\t// met un Like\n-\t\t\tSauces.updateOne(\n-\t\t\t\t{\n-\t\t\t\t\t// enregistre l'ID de l'utilisateur\n-\t\t\t\t\t_id: req.params.id, \n-\t\t\t\t},\n-\t\t\t\t{\n-\t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Like\"\n-\t\t\t\t\t$inc: { likes: req.body.like++ }, \n-\t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n-\t\t\t\t\t$push: { usersLiked: req.body.userId }, \n-\t\t\t\t}\n-\t\t\t)\n-\t\t\t\t.then((sauce) => res.status(200).json({ message: 'Like ajouté !' }))\n-\t\t\t\t.catch((error) => res.status(400).json({ error }));\n-\t\t\tbreak;\n-\t\t}\n+// \tlet likeString = like.toString();\n+// \tswitch (likeString) {\n+// \t\tcase '1': {\n+// \t\t\t// met un Like\n+// \t\t\tSauces.updateOne(\n+// \t\t\t\t{\n+// \t\t\t\t\t// enregistre l'ID de l'utilisateur\n+// \t\t\t\t\t_id: req.params.id, \n+// \t\t\t\t},\n+// \t\t\t\t{\n+// \t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Like\"\n+// \t\t\t\t\t$inc: { likes: req.body.like++ }, \n+// \t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n+// \t\t\t\t\t$push: { usersLiked: req.body.userId }, \n+// \t\t\t\t}\n+// \t\t\t)\n+// \t\t\t\t.then((sauce) => res.status(200).json({ message: 'Like ajouté !' }))\n+// \t\t\t\t.catch((error) => res.status(400).json({ error }));\n+// \t\t\tbreak;\n+// \t\t}\n \n-\t\tcase '-1': {\n-\t\t\t// met un Dislike\n-\t\t\tSauces.updateOne(\n-\t\t\t\t{\n-\t\t\t\t\t// enregistre l'ID de l'utilisateur\n-\t\t\t\t\t_id: req.params.id,\n-\t\t\t\t},\n-\t\t\t\t{\n-\t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Dislike\"\n-\t\t\t\t\t$inc: { dislikes: req.body.like++ * -1 },\n-\t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n-\t\t\t\t\t$push: { usersDisliked: req.body.userId },\n-\t\t\t\t}\n-\t\t\t)\n-\t\t\t\t.then((sauce) => res.status(200).json({ message: 'Dislike ajouté !' }))\n-\t\t\t\t.catch((error) => res.status(400).json({ error }));\n-\t\t\tbreak;\n-\t\t}\n+// \t\tcase '-1': {\n+// \t\t\t// met un Dislike\n+// \t\t\tSauces.updateOne(\n+// \t\t\t\t{\n+// \t\t\t\t\t// enregistre l'ID de l'utilisateur\n+// \t\t\t\t\t_id: req.params.id,\n+// \t\t\t\t},\n+// \t\t\t\t{\n+// \t\t\t\t\t// Incrémente le champs \"nombre d'utilisateurs qui ont mis un Dislike\"\n+// \t\t\t\t\t$inc: { dislikes: req.body.like++ * -1 },\n+// \t\t\t\t\t// Enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n+// \t\t\t\t\t$push: { usersDisliked: req.body.userId },\n+// \t\t\t\t}\n+// \t\t\t)\n+// \t\t\t\t.then((sauce) => res.status(200).json({ message: 'Dislike ajouté !' }))\n+// \t\t\t\t.catch((error) => res.status(400).json({ error }));\n+// \t\t\tbreak;\n+// \t\t}\n \n-\t\tdefault: {\n-\t\t\t// supprime un Like ou un Dislike\n-\t\t\tSauces.findOne({ _id: req.params.id })\n-\t\t\t\t.then((sauce) => {\n-\t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont liké la sauce\n-\t\t\t\t\tif (sauce.usersLiked.includes(req.body.userId)) {\n-\t\t\t\t\t\tSauces.updateOne(\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n-\t\t\t\t\t\t\t\t_id: req.params.id,\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n-\t\t\t\t\t\t\t\t$pull: { usersLiked: req.body.userId },\n-\t\t\t\t\t\t\t\t// supprime le Like\n-\t\t\t\t\t\t\t\t$inc: { likes: -1 },\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t)\n-\t\t\t\t\t\t\t.then((sauce) => {\n-\t\t\t\t\t\t\t\tres.status(200).json({ message: 'Like supprimé !' });\n-\t\t\t\t\t\t\t})\n-\t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n-\t\t\t\t\t}\n-\t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont Disliké la sauce\n-\t\t\t\t\telse if (sauce.usersDisliked.includes(req.body.userId)) {\n-\t\t\t\t\t\tSauces.updateOne(\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n-\t\t\t\t\t\t\t\t_id: req.params.id,\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n-\t\t\t\t\t\t\t\t$pull: { usersDisliked: req.body.userId },\n-\t\t\t\t\t\t\t\t// supprime le Dislike\n-\t\t\t\t\t\t\t\t$inc: { dislikes: -1 },\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t)\n-\t\t\t\t\t\t\t.then((sauce) => {\n-\t\t\t\t\t\t\t\tres.status(200).json({ message: 'Dislike supprimé !' });\n-\t\t\t\t\t\t\t})\n-\t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n-\t\t\t\t\t}\n-\t\t\t\t})\n-\t\t\t\t.catch((error) => res.status(400).json({ error }));\n-\t\t}\n-\t}\n-};\n+// \t\tdefault: {\n+// \t\t\t// supprime un Like ou un Dislike\n+// \t\t\tSauces.findOne({ _id: req.params.id })\n+// \t\t\t\t.then((sauce) => {\n+// \t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont liké la sauce\n+// \t\t\t\t\tif (sauce.usersLiked.includes(req.body.userId)) {\n+// \t\t\t\t\t\tSauces.updateOne(\n+// \t\t\t\t\t\t\t{\n+// \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+// \t\t\t\t\t\t\t\t_id: req.params.id,\n+// \t\t\t\t\t\t\t},\n+// \t\t\t\t\t\t\t{\n+// \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui ont aimés\n+// \t\t\t\t\t\t\t\t$pull: { usersLiked: req.body.userId },\n+// \t\t\t\t\t\t\t\t// supprime le Like\n+// \t\t\t\t\t\t\t\t$inc: { likes: -1 },\n+// \t\t\t\t\t\t\t}\n+// \t\t\t\t\t\t)\n+// \t\t\t\t\t\t\t.then((sauce) => {\n+// \t\t\t\t\t\t\t\tres.status(200).json({ message: 'Like supprimé !' });\n+// \t\t\t\t\t\t\t})\n+// \t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+// \t\t\t\t\t}\n+// \t\t\t\t\t// test si le userId est dans le tableau des personnes qui ont Disliké la sauce\n+// \t\t\t\t\telse if (sauce.usersDisliked.includes(req.body.userId)) {\n+// \t\t\t\t\t\tSauces.updateOne(\n+// \t\t\t\t\t\t\t{\n+// \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur\n+// \t\t\t\t\t\t\t\t_id: req.params.id,\n+// \t\t\t\t\t\t\t},\n+// \t\t\t\t\t\t\t{\n+// \t\t\t\t\t\t\t\t// enregistre l'ID de l'utilisateur dans le table de ceux qui n'ont aimés\n+// \t\t\t\t\t\t\t\t$pull: { usersDisliked: req.body.userId },\n+// \t\t\t\t\t\t\t\t// supprime le Dislike\n+// \t\t\t\t\t\t\t\t$inc: { dislikes: -1 },\n+// \t\t\t\t\t\t\t}\n+// \t\t\t\t\t\t)\n+// \t\t\t\t\t\t\t.then((sauce) => {\n+// \t\t\t\t\t\t\t\tres.status(200).json({ message: 'Dislike supprimé !' });\n+// \t\t\t\t\t\t\t})\n+// \t\t\t\t\t\t\t.catch((error) => res.status(400).json({ error }));\n+// \t\t\t\t\t}\n+// \t\t\t\t})\n+// \t\t\t\t.catch((error) => res.status(400).json({ error }));\n+// \t\t}\n+// \t}\n+// };\n \n \n // exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n"
                },
                {
                    "date": 1680682225396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n // \t}\n // };\n \n \n-// exports.likeSauces = (req, res, next) => {\n+/exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n //       .then((votedSauce) => {\n"
                },
                {
                    "date": 1680682819493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n // \t}\n // };\n \n \n-/exports.likeSauces = (req, res, next) => {\n+//exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n //       .then((votedSauce) => {\n"
                },
                {
                    "date": 1680682829005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,10 +97,10 @@\n // \t\t\t\t.catch((error) => res.status(400).json({ error }));\n // \t\t}\n // \t}\n // };\n+exports.likeSauces = (req, res, next) => {\n \n-\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680682922305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,8 +98,9 @@\n // \t\t}\n // \t}\n // };\n exports.likeSauces = (req, res, next) => {\n+    \n \n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n"
                },
                {
                    "date": 1680682947159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,9 @@\n // \t\t\t\t.catch((error) => res.status(400).json({ error }));\n // \t\t}\n // \t}\n // };\n+const\n exports.likeSauces = (req, res, next) => {\n     \n \n //exports.likeSauces = (req, res, next) => {\n"
                },
                {
                    "date": 1680682953364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n // \t\t\t\t.catch((error) => res.status(400).json({ error }));\n // \t\t}\n // \t}\n // };\n-const\n+const user\n exports.likeSauces = (req, res, next) => {\n     \n \n //exports.likeSauces = (req, res, next) => {\n"
                },
                {
                    "date": 1680682959865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n // \t\t\t\t.catch((error) => res.status(400).json({ error }));\n // \t\t}\n // \t}\n // };\n-const user\n+const userAvis = \n exports.likeSauces = (req, res, next) => {\n     \n \n //exports.likeSauces = (req, res, next) => {\n"
                },
                {
                    "date": 1680682970951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n // \t\t\t\t.catch((error) => res.status(400).json({ error }));\n // \t\t}\n // \t}\n // };\n-const userAvis = \n+const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n \n //exports.likeSauces = (req, res, next) => {\n"
                },
                {
                    "date": 1680683036172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n // };\n const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n-\n+if\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680683042854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n // };\n const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n-if\n+if(!)\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680683048881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n // };\n const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n-if(!)\n+if(!obj)\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680683054169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n // };\n const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n-if(!obj)\n+if(!Object.user)\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                },
                {
                    "date": 1680683059277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n // };\n const userAvis = req.body.userId\n exports.likeSauces = (req, res, next) => {\n     \n-if(!Object.userLiked)\n+if(!Object.userLiked.)\n //exports.likeSauces = (req, res, next) => {\n //     const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n //     let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n //     Sauces.findOne({ _id: req.params.id })\n"
                }
            ],
            "date": 1680618632085,
            "name": "Commit-0",
            "content": "exports.likeSauces = (req, res, next) => {\n    const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n    let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n    Sauces.findOne({ _id: req.params.id })\n      .then((votedSauce) => {\n        if (likeStatus === 1) {\n          // si un utilisateur like\n          Sauces.updateOne(\n            { _id: req.params.id },\n            { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n          )\n            .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n            .catch((error) => res.status(400).json({ error }));\n        } else if (likeStatus === -1) {\n          // si un utilisateur dislike\n          Sauces.updateOne(\n            { _id: req.params.id },\n            { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n          )\n            .then(() =>\n              res.status(201).json({ message: \"you dislike this sauce\" })\n            )\n            .catch((error) => res.status(400).json({ error }));\n        } else if (likeStatus === 0) {\n          // si un utilisateur annule un like ou dislike\n          if (votedSauce.usersLiked.includes(liker)) {\n            // si l'utilisateur a deja like une sauce\n            Sauces.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n              .then(() =>\n                res.status(201).json({ message: \"you un-likethis sauce\" })\n              )\n              .catch((error) => res.status(400).json({ error }));\n          } else if (votedSauce.usersDisliked.includes(liker)) {\n            // si l'utilisateur a deja unlike une sauce\n  \n            Sauces.updateOne(\n              { _id: req.params.id },\n              { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n            )\n              .then(() =>\n                res.status(201).json({ message: \"you un-dislike this sauce\" })\n              )\n              .catch((error) => res.status(400).json({ error }));\n          }\n        }\n      })\n      .catch((error) => res.status(400).json({ error }));\n  };"
        }
    ]
}