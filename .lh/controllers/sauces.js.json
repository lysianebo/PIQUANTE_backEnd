{
    "sourceFile": "controllers/sauces.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1680520097508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1680521958340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,5 +138,5 @@\n         error: error\n       });\n     }\n   );\n-};\n\\ No newline at end of file\n+};\n"
                },
                {
                    "date": 1680521976968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,4 +139,17 @@\n       });\n     }\n   );\n };\n+exports.likeSauces = (req, res, next) => {\n+  Sauces.find().then(\n+    (sauces) => {\n+      res.status(200).json(sauces);\n+    }\n+  ).catch(\n+    (error) => {\n+      res.status(400).json({\n+        error: error\n+      });\n+    }\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1680522072988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n //     description: req.body.description,\n //     imageUrl: req.body.imageUrl,\n //     price: req.body.price,\n //     userId: req.body.userId\n-        const saucesObject = JSON.parse(req.body.sauces);\n+        const saucesObject = JSON.parse(req.body.sauce);\n         delete saucesObject._id;\n         delete saucesObject._userId;\n         const sauces = new Sauces({\n             ...saucesObject,\n"
                },
                {
                    "date": 1680608341883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,5 +151,5 @@\n         error: error\n       });\n     }\n   );\n-};\n\\ No newline at end of file\n+};\n"
                },
                {
                    "date": 1680609933273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const Sauces = require('../models/Sauces');\n+const sauces = require('../models/Sauces');\n const fs = require('fs');\n \n exports.createSauces = (req, res, next) => {\n //   const sauces = new Sauces({\n"
                },
                {
                    "date": 1680618058914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const sauces = require('../models/Sauces');\n+const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n exports.createSauces = (req, res, next) => {\n //   const sauces = new Sauces({\n@@ -139,17 +139,17 @@\n       });\n     }\n   );\n };\n-exports.likeSauces = (req, res, next) => {\n-  Sauces.find().then(\n-    (sauces) => {\n-      res.status(200).json(sauces);\n-    }\n-  ).catch(\n-    (error) => {\n-      res.status(400).json({\n-        error: error\n-      });\n-    }\n-  );\n-};\n+// exports.likeSauces = (req, res, next) => {\n+//   Sauces.find().then(\n+//     (sauces) => {\n+//       res.status(200).json(sauces);\n+//     }\n+//   ).catch(\n+//     (error) => {\n+//       res.status(400).json({\n+//         error: error\n+//       });\n+//     }\n+//   );\n+// };\n"
                },
                {
                    "date": 1680618066105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,4 +152,52 @@\n //       });\n //     }\n //   );\n // };\n+exports.likeSauce = (req, res, next) => {\n+  const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n+  let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n+  Sauce.findOne({ _id: req.params.id })\n+    .then((votedSauce) => {\n+      if (likeStatus === 1) {\n+        // si un utilisateur like\n+        Sauce.updateOne(\n+          { _id: req.params.id },\n+          { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n+        )\n+          .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n+          .catch((error) => res.status(400).json({ error }));\n+      } else if (likeStatus === -1) {\n+        // si un utilisateur dislike\n+        Sauce.updateOne(\n+          { _id: req.params.id },\n+          { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n+        )\n+          .then(() =>\n+            res.status(201).json({ message: \"you dislike this sauce\" })\n+          )\n+          .catch((error) => res.status(400).json({ error }));\n+      } else if (likeStatus === 0) {\n+        // si un utilisateur annule un like ou dislike\n+        if (votedSauce.usersLiked.includes(liker)) {\n+          // si l'utilisateur a deja like une sauce\n+          Sauce.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n+            .then(() =>\n+              res.status(201).json({ message: \"you un-likethis sauce\" })\n+            )\n+            .catch((error) => res.status(400).json({ error }));\n+        } else if (votedSauce.usersDisliked.includes(liker)) {\n+          // si l'utilisateur a deja unlike une sauce\n+\n+          Sauce.updateOne(\n+            { _id: req.params.id },\n+            { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n+          )\n+            .then(() =>\n+              res.status(201).json({ message: \"you un-dislike this sauce\" })\n+            )\n+            .catch((error) => res.status(400).json({ error }));\n+        }\n+      }\n+    })\n+    .catch((error) => res.status(400).json({ error }));\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1680618101947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,9 +152,9 @@\n //       });\n //     }\n //   );\n // };\n-exports.likeSauce = (req, res, next) => {\n+exports.likeSauces = (req, res, next) => {\n   const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n   let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n   Sauce.findOne({ _id: req.params.id })\n     .then((votedSauce) => {\n"
                },
                {
                    "date": 1680618111210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n // };\n exports.likeSauces = (req, res, next) => {\n   const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n   let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n-  Sauce.findOne({ _id: req.params.id })\n+  Sauces.findOne({ _id: req.params.id })\n     .then((votedSauce) => {\n       if (likeStatus === 1) {\n         // si un utilisateur like\n         Sauce.updateOne(\n"
                },
                {
                    "date": 1680618119974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,17 +159,17 @@\n   Sauces.findOne({ _id: req.params.id })\n     .then((votedSauce) => {\n       if (likeStatus === 1) {\n         // si un utilisateur like\n-        Sauce.updateOne(\n+        Sauces.updateOne(\n           { _id: req.params.id },\n           { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n         )\n           .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n           .catch((error) => res.status(400).json({ error }));\n       } else if (likeStatus === -1) {\n         // si un utilisateur dislike\n-        Sauce.updateOne(\n+        Sauces.updateOne(\n           { _id: req.params.id },\n           { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n         )\n           .then(() =>\n"
                },
                {
                    "date": 1680618128647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       } else if (likeStatus === 0) {\n         // si un utilisateur annule un like ou dislike\n         if (votedSauce.usersLiked.includes(liker)) {\n           // si l'utilisateur a deja like une sauce\n-          Sauce.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n+          Sauces.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n             .then(() =>\n               res.status(201).json({ message: \"you un-likethis sauce\" })\n             )\n             .catch((error) => res.status(400).json({ error }));\n"
                },
                {
                    "date": 1680618137137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n             .catch((error) => res.status(400).json({ error }));\n         } else if (votedSauce.usersDisliked.includes(liker)) {\n           // si l'utilisateur a deja unlike une sauce\n \n-          Sauce.updateOne(\n+          Sauces.updateOne(\n             { _id: req.params.id },\n             { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n           )\n             .then(() =>\n"
                },
                {
                    "date": 1680618562132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,52 +152,4 @@\n //       });\n //     }\n //   );\n // };\n-exports.likeSauces = (req, res, next) => {\n-  const liker = req.body.userId; // recuperation de l'utilisateur ayant like/dislike\n-  let likeStatus = req.body.like; // recuperation de la valeur du like/dislike\n-  Sauces.findOne({ _id: req.params.id })\n-    .then((votedSauce) => {\n-      if (likeStatus === 1) {\n-        // si un utilisateur like\n-        Sauces.updateOne(\n-          { _id: req.params.id },\n-          { $push: { usersLiked: liker }, $inc: { likes: 1 } } // ajout de l'userid dans la liste usersliked de la bdd et ajout d'un like a la sauce\n-        )\n-          .then(() => res.status(201).json({ message: \"you like this sauce\" }))\n-          .catch((error) => res.status(400).json({ error }));\n-      } else if (likeStatus === -1) {\n-        // si un utilisateur dislike\n-        Sauces.updateOne(\n-          { _id: req.params.id },\n-          { $inc: { dislikes: 1 }, $push: { usersDisliked: liker } } // ajout de l'userid dans la liste usersDisliked de la bdd et ajout d'un dislike a la sauce\n-        )\n-          .then(() =>\n-            res.status(201).json({ message: \"you dislike this sauce\" })\n-          )\n-          .catch((error) => res.status(400).json({ error }));\n-      } else if (likeStatus === 0) {\n-        // si un utilisateur annule un like ou dislike\n-        if (votedSauce.usersLiked.includes(liker)) {\n-          // si l'utilisateur a deja like une sauce\n-          Sauces.updateOne({ $inc: { likes: -1 }, $pull: { usersLiked: liker } }) // suppression du like de la sauce et de l'userid de la bdd usersliked\n-            .then(() =>\n-              res.status(201).json({ message: \"you un-likethis sauce\" })\n-            )\n-            .catch((error) => res.status(400).json({ error }));\n-        } else if (votedSauce.usersDisliked.includes(liker)) {\n-          // si l'utilisateur a deja unlike une sauce\n-\n-          Sauces.updateOne(\n-            { _id: req.params.id },\n-            { $inc: { dislikes: -1 }, $pull: { usersDisliked: liker } } // suppression du dislike de la sauce et de l'userid de la bdd usersdisliked\n-          )\n-            .then(() =>\n-              res.status(201).json({ message: \"you un-dislike this sauce\" })\n-            )\n-            .catch((error) => res.status(400).json({ error }));\n-        }\n-      }\n-    })\n-    .catch((error) => res.status(400).json({ error }));\n-};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1680692002220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,9 @@\n const Sauces = require('../models/Sauces');\n const fs = require('fs');\n \n exports.createSauces = (req, res, next) => {\n-//   const sauces = new Sauces({\n-//     title: req.body.title,\n-//     description: req.body.description,\n-//     imageUrl: req.body.imageUrl,\n-//     price: req.body.price,\n-//     userId: req.body.userId\n+\n         const saucesObject = JSON.parse(req.body.sauce);\n         delete saucesObject._id;\n         delete saucesObject._userId;\n         const sauces = new Sauces({\n"
                },
                {
                    "date": 1680692014421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,31 +41,8 @@\n     }\n   );\n };\n \n-// exports.modifySauces = (req, res, next) => {\n-//   const sauces = new Sauces({\n-//     _id: req.params.id,\n-//     title: req.body.title,\n-//     description: req.body.description,\n-//     imageUrl: req.body.imageUrl,\n-//     price: req.body.price,\n-//     userId: req.body.userId\n-//   });\n-//   Sauces.updateOne({_id: req.params.id}, sauces).then(\n-//     () => {\n-//       res.status(201).json({\n-//         message: 'Sauces updated successfully!'\n-//       });\n-//     }\n-//   ).catch(\n-//     (error) => {\n-//       res.status(400).json({\n-//         error: error\n-//       });\n-//     }\n-//   );\n-// };\n exports.modifySauces = (req, res, next) => {\n     const saucesObject = req.file ? {\n         ...JSON.parse(req.body.sauces),\n         imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\n"
                },
                {
                    "date": 1680692022936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,23 +63,8 @@\n             res.status(400).json({ error });\n         });\n  };\n \n-// exports.deleteSauces = (req, res, next) => {\n-//   Sauces.deleteOne({_id: req.params.id}).then(\n-//     () => {\n-//       res.status(200).json({\n-//         message: 'Deleted!'\n-//       });\n-//     }\n-//   ).catch(\n-//     (error) => {\n-//       res.status(400).json({\n-//         error: error\n-//       });\n-//     }\n-//   );\n-// };\n \n exports.deleteSauces = (req, res, next) => {\n     Sauces.findOne({ _id: req.params.id})\n         .then(sauces => {\n"
                },
                {
                    "date": 1680692030825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n             res.status(400).json({ error });\n         });\n  };\n \n-\n exports.deleteSauces = (req, res, next) => {\n     Sauces.findOne({ _id: req.params.id})\n         .then(sauces => {\n             if (sauces.userId != req.auth.userId) {\n@@ -96,17 +95,4 @@\n       });\n     }\n   );\n };\n-// exports.likeSauces = (req, res, next) => {\n-//   Sauces.find().then(\n-//     (sauces) => {\n-//       res.status(200).json(sauces);\n-//     }\n-//   ).catch(\n-//     (error) => {\n-//       res.status(400).json({\n-//         error: error\n-//       });\n-//     }\n-//   );\n-// };\n"
                }
            ],
            "date": 1680520097508,
            "name": "Commit-0",
            "content": "const Sauces = require('../models/Sauces');\nconst fs = require('fs');\n\nexports.createSauces = (req, res, next) => {\n//   const sauces = new Sauces({\n//     title: req.body.title,\n//     description: req.body.description,\n//     imageUrl: req.body.imageUrl,\n//     price: req.body.price,\n//     userId: req.body.userId\n        const saucesObject = JSON.parse(req.body.sauces);\n        delete saucesObject._id;\n        delete saucesObject._userId;\n        const sauces = new Sauces({\n            ...saucesObject,\n            userId: req.auth.userId,\n            imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\n  });\n  sauces.save().then(\n    () => {\n      res.status(201).json({\n        message: 'Post saved successfully!'\n      });\n    }\n  ).catch(\n    (error) => {\n      res.status(400).json({\n        error: error\n      });\n    }\n  );\n};\n\nexports.getOneSauces = (req, res, next) => {\n  Sauces.findOne({\n    _id: req.params.id\n  }).then(\n    (sauces) => {\n      res.status(200).json(sauces);\n    }\n  ).catch(\n    (error) => {\n      res.status(404).json({\n        error: error\n      });\n    }\n  );\n};\n\n// exports.modifySauces = (req, res, next) => {\n//   const sauces = new Sauces({\n//     _id: req.params.id,\n//     title: req.body.title,\n//     description: req.body.description,\n//     imageUrl: req.body.imageUrl,\n//     price: req.body.price,\n//     userId: req.body.userId\n//   });\n//   Sauces.updateOne({_id: req.params.id}, sauces).then(\n//     () => {\n//       res.status(201).json({\n//         message: 'Sauces updated successfully!'\n//       });\n//     }\n//   ).catch(\n//     (error) => {\n//       res.status(400).json({\n//         error: error\n//       });\n//     }\n//   );\n// };\nexports.modifySauces = (req, res, next) => {\n    const saucesObject = req.file ? {\n        ...JSON.parse(req.body.sauces),\n        imageUrl: `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\n    } : { ...req.body };\n  \n    delete saucesObject._userId;\n    Sauces.findOne({_id: req.params.id})\n        .then((sauces) => {\n            if (sauces.userId != req.auth.userId) {\n                res.status(401).json({ message : 'Not authorized'});\n            } else {\n                Sauces.updateOne({ _id: req.params.id}, { ...saucesObject, _id: req.params.id})\n                .then(() => res.status(200).json({message : 'Objet modifié!'}))\n                .catch(error => res.status(401).json({ error }));\n            }\n        })\n        .catch((error) => {\n            res.status(400).json({ error });\n        });\n };\n\n// exports.deleteSauces = (req, res, next) => {\n//   Sauces.deleteOne({_id: req.params.id}).then(\n//     () => {\n//       res.status(200).json({\n//         message: 'Deleted!'\n//       });\n//     }\n//   ).catch(\n//     (error) => {\n//       res.status(400).json({\n//         error: error\n//       });\n//     }\n//   );\n// };\n\nexports.deleteSauces = (req, res, next) => {\n    Sauces.findOne({ _id: req.params.id})\n        .then(sauces => {\n            if (sauces.userId != req.auth.userId) {\n                res.status(401).json({message: 'Not authorized'});\n            } else {\n                const filename = sauces.imageUrl.split('/images/')[1];\n                fs.unlink(`images/${filename}`, () => {\n                    Sauces.deleteOne({_id: req.params.id})\n                        .then(() => { res.status(200).json({message: 'Objet supprimé !'})})\n                        .catch(error => res.status(401).json({ error }));\n                });\n            }\n        })\n        .catch( error => {\n            res.status(500).json({ error });\n        });\n };\n\nexports.getAllSauces = (req, res, next) => {\n  Sauces.find().then(\n    (sauces) => {\n      res.status(200).json(sauces);\n    }\n  ).catch(\n    (error) => {\n      res.status(400).json({\n        error: error\n      });\n    }\n  );\n};"
        }
    ]
}